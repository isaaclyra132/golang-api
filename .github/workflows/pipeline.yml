# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI-CD

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
            go-version: 1.20.3
          
      - name: Install dependencies
        run: go get -v ./...

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

  Tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.3
          
      #- name: Verify dependencies
      #  run: go mod verify
            
      #- name: Install dependencies
      #  run: go get -v ./

      #- name: Verify dependencies
      #  run: go mod verify
        
      - name: Tests
        run:  go test -v ./...
  QA:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.3
          
      #- name: Verify dependencies
      #  run: go mod verify
            
      #- name: Install dependencies
      #  run: go get -v ./

      #- name: Verify dependencies
      #  run: go mod verify
      
      - name: Run go vet
        run: go vet ./...
      
      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...
      
      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint ./...
  Deploy:
    needs: Tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: golang-api
      PROJECT_ID: charismatic-amp-383021
    steps:
      - uses: actions/checkout@v3
      
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          
      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: autopilot-cluster-1
          location: southamerica-west1 
          
      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .
          
      - name: Configure Docker Client
        run: |
          gcloud auth configure-docker --quiet
          
      - name: Push Docker Image to Container Registry
        env:
          GIT_TAG: v0.1.0
        run: |
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
      
      - name: Update Pods
        run: |
          ls
          cd k8s
          # gcloud container clusters get-credentials autopilot-cluster-1 --region southamerica-west1 --project charismatic-amp-383021
          kubectl apply -f deployment.yaml
          
    
    
      
      
      
      
      
      
